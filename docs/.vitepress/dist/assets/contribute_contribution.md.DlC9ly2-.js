import{_ as e,c as t,o,V as r}from"./chunks/framework.C3kJ9Dd1.js";const m=JSON.parse('{"title":"Contributing to the project","description":"","frontmatter":{},"headers":[],"relativePath":"contribute/contribution.md","filePath":"contribute/contribution.md","lastUpdated":1708250018000}'),n={name:"contribute/contribution.md"},a=r('<h1 id="contributing-to-the-project" tabindex="-1">Contributing to the project <a class="header-anchor" href="#contributing-to-the-project" aria-label="Permalink to &quot;Contributing to the project&quot;">​</a></h1><p>Contributions are <strong>welcome</strong> and will be fully <strong>credited</strong>.</p><p>We accept contributions via Pull Requests on <a href="https://github.com/stefro/laravel-lang-country" target="_blank" rel="noreferrer">Github</a>.</p><div class="warning custom-block"><p class="custom-block-title">Adding new features</p><p>To prevent disappointment, please open an issue to discuss your feature before you start coding. We can then discuss if it&#39;s a good fit for the package before you put in the effort of creating a PR.</p></div><h2 id="pull-requests" tabindex="-1">Pull Requests <a class="header-anchor" href="#pull-requests" aria-label="Permalink to &quot;Pull Requests&quot;">​</a></h2><ul><li><p><a href="https://github.com/php-fig/fig-standards/blob/master/accepted/PSR-12-extended-coding-style-guide.md" target="_blank" rel="noreferrer">PSR-12 Coding Standard</a> Fix the formating of your code with <code>composer format</code>.</p></li><li><p><strong>Add tests!</strong> - Your patch won&#39;t be accepted if it doesn&#39;t have tests, we have 100% code coverage. You can run the tests with <code>composer test</code> or <code>composer test:fast</code> (parallel testing). And you can check the coverage with <code>composer test:coverage</code>.</p></li><li><p>Make sure all your code is <strong>typed</strong>. We have 100% type coverage. You can check the type coverage with <code>composer type:check</code>.</p></li><li></li><li><p><strong>Document any change in behaviour</strong> -You can find all the files for documentation in de <code>/docs</code> directory.</p></li><li><p><strong>Consider our release cycle</strong> - We try to follow <a href="http://semver.org/" target="_blank" rel="noreferrer">SemVer v2.0.0</a>. Randomly breaking public APIs is not an option.</p></li><li><p><strong>Create feature branches</strong> - Don&#39;t ask us to pull from your master branch.</p></li><li><p><strong>One pull request per feature</strong> - If you want to do more than one thing, send multiple pull requests.</p></li><li><p><strong>Send coherent history</strong> - Make sure each individual commit in your pull request is meaningful. If you had to make multiple intermediate commits while developing, please <a href="http://www.git-scm.com/book/en/v2/Git-Tools-Rewriting-History#Changing-Multiple-Commit-Messages" target="_blank" rel="noreferrer">squash them</a> before submitting.</p></li></ul><p><strong>Happy coding</strong>!</p>',7),i=[a];function s(c,l,u,p,d,h){return o(),t("div",null,i)}const f=e(n,[["render",s]]);export{m as __pageData,f as default};
