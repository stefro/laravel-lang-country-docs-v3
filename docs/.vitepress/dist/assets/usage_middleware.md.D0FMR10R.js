import{_ as e,c as a,o as t,V as l}from"./chunks/framework.C3kJ9Dd1.js";const _=JSON.parse('{"title":"Middleware","description":"","frontmatter":{},"headers":[],"relativePath":"usage/middleware.md","filePath":"usage/middleware.md","lastUpdated":1708250018000}'),o={name:"usage/middleware.md"},i=l('<h1 id="middleware" tabindex="-1">Middleware <a class="header-anchor" href="#middleware" aria-label="Permalink to &quot;Middleware&quot;">​</a></h1><p>The middleware is optional <a href="/laravel-lang-country-docs-v3/getting-started/installation.html#middleware-optional">middleware</a>. You can create your own middleware tailored to your needs. But you can also use the “out of the box” middleware. This is what the default middleware will do:</p><ul><li>It will check the users browser language preferences if there is no LangCountry is set. Then it will try to make the most perfect match to the <code>allowed</code> lang_country’s in your settings file.</li><li>When there is no perfect match (language AND country) it will try to make a match on language only.</li><li>When there is still no match, it will return to your fallback setting.</li><li>It will ALWAYS store a <code>lang_country</code> session, so you can safely use all the LangCountry features it in your app.</li><li>When a lang_country is already set, it will not run any unnecessary scripts.</li><li>If you&#39;re using <a href="https://laravel.com/docs/master/localization#using-translation-strings-as-keys" target="_blank" rel="noreferrer">Translation Strings As Keys</a>: Based on the <code>lang_country</code> it will check your (Laravel) <code>lang/</code> folder for an exact match in your json translation files (example es_CO). If an exact match is found it will set the Laravel Locale to this value. This way you’re able to create different translation files for each country if you need it.</li><li>When no exact match, it will set the Laravel Locale to the language only.</li></ul>',3),r=[i];function n(s,d,c,u,h,m){return t(),a("div",null,r)}const y=e(o,[["render",n]]);export{_ as __pageData,y as default};
